name: Create Release from TOC Version

permissions:
  contents: write
  pull-requests: write

on:
  workflow_dispatch:
    inputs:
      create_release:
        description: 'Create GitHub release after tagging'
        required: false
        default: true
        type: boolean

jobs:
  create-tag-and-release:
    name: Extract TOC version and create tag/release
    runs-on: ubuntu-latest
    
    outputs:
      version: ${{ steps.extract-version.outputs.version }}
      tag_name: ${{ steps.extract-version.outputs.tag_name }}

    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
        with:
          fetch-depth: 0

      # Extraire la version du fichier .toc
      - name: Extract version from TOC file
        id: extract-version
        run: |
          # Extraire la version du fichier .toc
          TOC_VERSION=$(grep "^## Version:" GuildLogistics/GuildLogistics.toc | sed 's/## Version: //' | tr -d '\r\n' | xargs)
          
          if [ -z "$TOC_VERSION" ]; then
            echo "❌ Version not found in TOC file"
            exit 1
          fi
          
          TAG_NAME="v$TOC_VERSION"
          
          echo "📦 Version extraite du TOC: $TOC_VERSION"
          echo "🏷️ Tag qui sera créé: $TAG_NAME"
          
          # Vérifier si le tag existe déjà
          if git rev-parse "$TAG_NAME" >/dev/null 2>&1; then
            echo "⚠️ Le tag $TAG_NAME existe déjà"
            echo "tag_exists=true" >> $GITHUB_OUTPUT
          else
            echo "✅ Le tag $TAG_NAME sera créé"
            echo "tag_exists=false" >> $GITHUB_OUTPUT
          fi
          
          echo "version=$TOC_VERSION" >> $GITHUB_OUTPUT
          echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT

      # Créer le tag Git
      - name: Create Git Tag
        if: steps.extract-version.outputs.tag_exists == 'false'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          TAG_NAME="${{ steps.extract-version.outputs.tag_name }}"
          VERSION="${{ steps.extract-version.outputs.version }}"
          
          echo "🏷️ Création du tag: $TAG_NAME"
          git tag -a "$TAG_NAME" -m "Release version $VERSION"
          git push origin "$TAG_NAME"

      # Générer le changelog pour cette version
      - name: Generate changelog for this version
        if: steps.extract-version.outputs.tag_exists == 'false' && inputs.create_release
        uses: tj-actions/git-cliff@8bfb7bf10268aed30bde8e34ecaeddb6c6149edd # v2
        with:
          args: --latest
          output: RELEASE_NOTES.md

      # Créer la release GitHub
      - name: Create GitHub Release
        if: steps.extract-version.outputs.tag_exists == 'false' && inputs.create_release
        uses: softprops/action-gh-release@72f2c25fcb47643c292f7107632f7a47c1df5cd8 # v2
        with:
          tag_name: ${{ steps.extract-version.outputs.tag_name }}
          name: "GuildLogistics ${{ steps.extract-version.outputs.version }}"
          body_path: RELEASE_NOTES.md
          draft: false
          prerelease: false
          make_latest: true

      # Afficher le résumé
      - name: Summary
        run: |
          echo "## 📋 Résumé de l'action" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Version extraite**: ${{ steps.extract-version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Tag créé**: ${{ steps.extract-version.outputs.tag_name }}" >> $GITHUB_STEP_SUMMARY
          if [ "${{ inputs.create_release }}" = "true" ]; then
            echo "- **Release créée**: ✅ Oui" >> $GITHUB_STEP_SUMMARY
          else
            echo "- **Release créée**: ❌ Non (désactivée)" >> $GITHUB_STEP_SUMMARY
          fi
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ "${{ steps.extract-version.outputs.tag_exists }}" = "false" ]; then
            echo "🎉 **Le tag et la release ont été créés avec succès !**" >> $GITHUB_STEP_SUMMARY
          else
            echo "⚠️ **Le tag existait déjà - aucune action effectuée**" >> $GITHUB_STEP_SUMMARY
          fi
