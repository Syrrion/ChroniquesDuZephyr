name: Create Release from TOC Version

permissions:
  contents: write
  pull-requests: write
  actions: write

on:
  workflow_dispatch:
    inputs:
      create_release:
        description: 'Create GitHub release after tagging'
        required: false
        default: true
        type: boolean

jobs:
  create-tag-and-release:
    name: Extract TOC version and create tag/release
    runs-on: ubuntu-latest
    
    outputs:
      version: ${{ steps.extract-version.outputs.version }}
      tag_name: ${{ steps.extract-version.outputs.tag_name }}

    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
        with:
          fetch-depth: 0

      # Extraire la version du fichier .toc
      - name: Extract version from TOC file
        id: extract-version
        run: |
          # Extraire la version du fichier .toc
          TOC_VERSION=$(grep "^## Version:" GuildLogistics.toc | sed 's/## Version: //' | tr -d '\r\n' | xargs)
          
          if [ -z "$TOC_VERSION" ]; then
            echo "‚ùå Version not found in TOC file"
            exit 1
          fi
          
          TAG_NAME="v$TOC_VERSION"
          
          echo "üì¶ Version extraite du TOC: $TOC_VERSION"
          echo "üè∑Ô∏è Tag qui sera cr√©√©: $TAG_NAME"
          
          # V√©rifier si le tag existe d√©j√†
          if git rev-parse "$TAG_NAME" >/dev/null 2>&1; then
            echo "‚ö†Ô∏è Le tag $TAG_NAME existe d√©j√†"
            echo "tag_exists=true" >> $GITHUB_OUTPUT
          else
            echo "‚úÖ Le tag $TAG_NAME sera cr√©√©"
            echo "tag_exists=false" >> $GITHUB_OUTPUT
          fi
          
          echo "version=$TOC_VERSION" >> $GITHUB_OUTPUT
          echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT

      # Cr√©er le tag Git
      - name: Create Git Tag
        if: steps.extract-version.outputs.tag_exists == 'false'
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN || secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          TAG_NAME="${{ steps.extract-version.outputs.tag_name }}"
          VERSION="${{ steps.extract-version.outputs.version }}"
          
          echo "üè∑Ô∏è Cr√©ation du tag: $TAG_NAME"
          git tag -a "$TAG_NAME" -m "Release version $VERSION"
          git push origin "$TAG_NAME"