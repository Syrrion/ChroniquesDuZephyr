name: Create Tag on TOC Version Change

permissions:
  contents: write
  pull-requests: write

on:
  push:
    branches: [main]
    paths: ['GuildLogistics.toc']

jobs:
  check-and-tag:
    name: Check version and create tag
    runs-on: ubuntu-latest
    
    outputs:
      version_changed: ${{ steps.check-version.outputs.version_changed }}
      version: ${{ steps.check-version.outputs.version }}
      tag_name: ${{ steps.check-version.outputs.tag_name }}

    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
        with:
          fetch-depth: 2  # Besoin de 2 commits pour comparer

      # V√©rifier si la version a chang√© dans le .toc
      - name: Check version change
        id: check-version
        run: |
          # Version actuelle
          CURRENT_VERSION=$(grep "^## Version:" GuildLogistics.toc | sed 's/## Version: //' | tr -d '\r\n' | xargs)
          
          # Version pr√©c√©dente (commit parent)
          PREVIOUS_VERSION=$(git show HEAD~1:GuildLogistics.toc | grep "^## Version:" | sed 's/## Version: //' | tr -d '\r\n' | xargs)
          
          echo "Version actuelle: $CURRENT_VERSION"
          echo "Version pr√©c√©dente: $PREVIOUS_VERSION"
          
          if [ "$CURRENT_VERSION" != "$PREVIOUS_VERSION" ]; then
            echo "‚úÖ Version chang√©e de $PREVIOUS_VERSION vers $CURRENT_VERSION"
            echo "version_changed=true" >> $GITHUB_OUTPUT
            echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
            echo "tag_name=v$CURRENT_VERSION" >> $GITHUB_OUTPUT
          else
            echo "‚ÑπÔ∏è Version inchang√©e: $CURRENT_VERSION"
            echo "version_changed=false" >> $GITHUB_OUTPUT
          fi

      # Cr√©er le tag Git si la version a chang√©
      - name: Create Git Tag
        if: steps.check-version.outputs.version_changed == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          TAG_NAME="${{ steps.check-version.outputs.tag_name }}"
          VERSION="${{ steps.check-version.outputs.version }}"
          
          # V√©rifier si le tag existe d√©j√†
          if git rev-parse "$TAG_NAME" >/dev/null 2>&1; then
            echo "‚ö†Ô∏è Le tag $TAG_NAME existe d√©j√†"
          else
            echo "üè∑Ô∏è Cr√©ation du tag: $TAG_NAME"
            git tag -a "$TAG_NAME" -m "Release version $VERSION"
            git push origin "$TAG_NAME"
            echo "‚úÖ Tag cr√©√©: $TAG_NAME"
            echo "üì¶ Le workflow de release va se d√©clencher automatiquement"
          fi

  persist-changelog:
    name: Open PR with full CHANGELOG.md
    needs: check-and-tag
    if: needs.check-and-tag.outputs.version_changed == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      # Checkout again (this job is separate)
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
        with:
          fetch-depth: 0

      # Generate the full changelog (all tags)
      - name: Generate full changelog (all tags)
        uses: tj-actions/git-cliff@8bfb7bf10268aed30bde8e34ecaeddb6c6149edd # v2
        with:
          output: CHANGELOG.md

      # Open a PR with the updated CHANGELOG.md (persist full history into repo)
      - name: Create Pull Request with CHANGELOG.md
        uses: peter-evans/create-pull-request@271a8d0340265f705b14b6d32b9829c1cb33d45e # v7
        with:
          base: main
          branch: "chore/update-changelog-${{ needs.check-and-tag.outputs.tag_name }}"
          title: "chore: update CHANGELOG for ${{ needs.check-and-tag.outputs.tag_name }}"
          commit-message: "chore: update CHANGELOG for ${{ needs.check-and-tag.outputs.tag_name }}"
          add-paths: |
            CHANGELOG.md
          labels: |
            merge when passing
          body: |
            This PR persists the generated CHANGELOG for **${{ needs.check-and-tag.outputs.tag_name }}**.
            - Release body used: LATEST_CHANGELOG.md (single tag)
            - Repo file updated to full history: CHANGELOG.md
